<?phpnamespace App\Controller;use Doctrine\ORM\EntityManagerInterface;use Symfony\Component\HttpFoundation\Request;use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;use Symfony\Component\HttpFoundation\Response;use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;use Symfony\Component\Routing\Annotation\Route;use App\Repository\NewUsersEntityRepository;use App\Form\FormType;class AdminDashbordUsersController extends AbstractController{    private UserPasswordHasherInterface $passwordHasher;    private EntityManagerInterface $entityManager;    public function __construct(UserPasswordHasherInterface $passwordHasher,EntityManagerInterface $entityManager)    {         $this->passwordHasher = $passwordHasher;         $this->entityManager = $entityManager;    }    #[Route('/admin/dashbord/users', name: 'app_admin_dashbord_users')]    public function index(NewUsersEntityRepository $newUserRepository): Response    {        $users = $newUserRepository->findAll();        return $this->render('admin_dashbord/users-list.html.twig', [            'users' => $users,        ]);    }    #[Route('/admin/dashbord/users/{id}', name: 'app_admin_dashbord_user_info')]    public function edit(int $id,NewUsersEntityRepository $newUserRepository,Request $request):Response{        $user = $newUserRepository->find($id);        if(!$user){            //Redirect to home if user doesnt exist            return $this->redirectToRoute('app_home');        }        $form = $this->createForm(FormType::class, $user,['method'=>'POST']);        $form->handleRequest($request);        if ($form->isSubmitted()){            if ($form->isValid()){                if (is_array($user)) {                    // Convert the array to a new user entity                    $user = new NewUsersEntity($user);                }                //Make hash password for new users                $hashedPassword = $this->passwordHasher->hashPassword(                    $user,                    $user->getPassword()                );                $user->setPassword($hashedPassword);                $this->entityManager->persist($user);                $this->entityManager->flush();                $this->addFlash('notice', "User was created!");            }            $this->addFlash('notice', "Something went wrong!");        }        return $this->render('admin_dashbord/user.html.twig', [            'form'=> $form->createView(),        ]);    }}